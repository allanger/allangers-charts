---
shortcuts:
  backendURL: kitchenowl-api.company
  frontendURL: kitchenowl.company

base:
  workload:
    kind: Deployment
    strategy:
      type: RollingUpdate
    containers:
      kitchenowl:
        image:
          registry: registry.hub.docker.com
          repository: tombursch/kitchenowl
          tag:
          pullPolicy: Always
        ports:
          main: 
            - http
        envFrom:
          main: {}
          secrets: {}
        volumeMounts:
          storage:
            data:
              path: /app/data
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 80
ingress:
  main:
    enabled: true
    annotations: {}
    class: traefik
    rules:
      - host: '{{ .Values.shortcuts.backendURL }}'
        http:
          paths:
            - backend:
                service:
                  name: '{{ include "chart.fullname" $ }}-main'
                  port:
                    number: 8080
              path: /
              pathType: Prefix
    tls:
      - hosts:
          - '{{ .Values.shortcuts.hostname }}'
        secretName: '{{ .Values.shortcuts.hostname }}'

services:
  main:
    enabled: true
    type: ClusterIP
    ports:
      http:
        port: 8080
        targetPort: 8080
        protocol: TCP

storage:
  data:
    enabled: true
    storageClassName: default
    size: 1Gi
    accessModes:
      - ReadWriteOnce

config:
  env:
    main:
      enabled: true
      sensitive: false
      remove: []
      data:
        STORAGE_PATH: /app/data
        FRONT_URL: '{{ .Values.shortcuts.frontendURL }}'
    secrets:
      enabled: true
      sensitive: true
      remove: []
      data: {}
  
